<?php
include_once("constants.php");
include_once("connection.php");

/*built in functions used
 trim()
 stripslashed()
 htmlspecialchars()
 strip_tags()
 str_replace() args:old , new , string data 
*/
function validateFormData($formData){
    $formData=trim(stripslashes(htmlspecialchars(strip_tags(str_replace(array('(',')'),'',$formData)),ENT_QUOTES)));
    return $formData;
}
function validatePassword($formData){
    $formData=trim(stripslashes(htmlspecialchars($formData)));
    return $formData;
}


/************************Generate Query Up*******************************************
This method takes input as the card type and also the id of the card if the card type is all_card
then a query is generated which wil fetch both the news and events as well
but if only news_card or event_card query is fired then the query for fetching specified card will be
created and retrned to the caller function .
any card generated by this query will be younger than the specified card id in the passed parameter
by default the nimbers of rows generated by this query will be DEFAULT_NO_CARDS
It returns all the younger cards 
*/
function generateQueryUp($id,$cardType,$limit=DEFAULT_NO_CARDS){
    if($cardType==ALL_CARDS)
        $query="select * from feed_view where card_id>$id order by card_id desc limit $limit;";
    else
        $query="select * from feed_view where card_id>$id and type=$cardType order by card_id desc limit $limit;";
    return $query;
}


/*************GENERATE QUERY DOWN****************************
This method takes input as the card type and also the id of the card if the card type is all_card
then a query is generated which wil fetch both the news and events as well
but if only news_card or event_card query is fired then the query for fetching specified card will be
created and retrned to the caller function .
any card generated by this query will be older than the specified card id in the passed parameter
by default the numbers of rows generated by this query will be DEFAULT_NO_CARDS
It returns all the older cards 
*/
function generateQueryDown($id,$cardType,$limit=DEFAULT_NO_CARDS){
    if($cardType==ALL_CARDS)
        $query="select * from feed_view where card_id<=$id order by card_id desc limit $limit;";
    else
        $query="select * from feed_view where card_id<=$id and type=$cardType order by card_id desc limit $limit;";
    return $query;
}




/***************ARRAY OF LINKS IN CARDS ***************************
this function takes input as the card id whose links are to be fetched an a connection object/variable
if there are no links for the card the function returns an array with value of index 0 as -1
otherwise it returns an array of index containing all the links present in the table
*/
function getLinks($id,$conn){
    $arr=array();
    $count=0;
    $query="select link from card_links where card_id=$id;";
    $result=mysqli_query($conn,$query);
    if(mysqli_num_rows($result)<=0)
        return $arr;
    while($row=mysqli_fetch_assoc($result)){
        $arr[$count++]=$row["link"];
    }
    return $arr;
}


/*************************Array of Phone number ***************************
This method will return all the phone numebrs stored for a specific person id passed as the parameter.
*/
function getPhoneNumbers($id,$conn){
    $arr=array();
    $count=0;
    $query="select phone_no from person_phone where person_id=$id;";
    $result=mysqli_query($conn,$query);
    if(mysqli_num_rows($result)<=0)
        return $arr;
    while($row=mysqli_fetch_assoc($result)){
        $arr[$count++]=$row["phone_no"];
    }
    return $arr;
}


/*************************QUERY NEWS ******************************
This function is responsible for fetching all the news card (NEWS_CARD) present in the database
the function returns a json string containing records of DEFAULT_NO_CARDS rows from the database
*/
function queryNews($id,$conn,$limit=DEFAULT_NO_CARDS){
    $json=queryCards($id,$conn,NEWS_CARDS,$limit);
    return $json;
}
/*************************QUERY EVENT ******************************
This function is responsible for fetching all the events card (EVENT_CARD) present in the database
the function returns a json string containing records of DEFAULT_NO_CARDS rows from the database
*/
function queryEvents($id,$conn,$limit=DEFAULT_NO_CARDS){
    $json=queryCards($id,$conn,EVENT_CARDS,$limit);
    return $json;
}


/*************************QUERY YOUNGER NEWS ******************************
This function is responsible for fetching all Younger news
*/
function queryYoungerNews($id,$conn,$limit=DEFAULT_NO_CARDS){
    $json=queryYoungerCards($id,$conn,NEWS_CARDS,$limit);
    return $json;
}
/*************************QUERY YOUNGER EVENTS ******************************
This function is responsible for fetching all Younger events 
*/
function queryYoungerEvents($id,$conn,$limit=DEFAULT_NO_CARDS){
    $json=queryYoungerCards($id,$conn,EVENT_CARDS,$limit);
    return $json;
}


/*************************QUERY OLDER NEWS ******************************
This function is responsible for fetching all Older news
*/
function queryOlderNews($id,$conn,$limit=DEFAULT_NO_CARDS){
    $json=queryOlderCards($id,$conn,NEWS_CARDS,$limit);
    return $json;
}
/*************************QUERY OLDER EVENTS ******************************
This function is responsible for fetching all Younger events 
*/
function queryOlderEvents($id,$conn,$limit=DEFAULT_NO_CARDS){
    $json=queryOlderCards($id,$conn,EVENT_CARDS,$limit);
    return $json;
}


/*******************APPEND TO JSON******************************
This function takes a json string , and a result array converts the array into json and appends it to the passed json string Nd then returns it.

for example if the $json="{ cards:[", then the output of this function will be
$json = {cards :[{"id1":"value1"},{"id1":"value1"},{"id1":"value1"},
*/
function addJsonEntry($json,$result,$conn){
    while($row=mysqli_fetch_assoc($result)){
        //$row["content"]="LOREM";
        //$row["image"]="sh1.jpg";
        $row["image"]=getImageUrl($row["card_id"]);
        $links=getLinks($row["card_id"],$conn);
        //echo "<h1>".print_r($links)."<//h1>";
        $row["link"]=$links;
        $links=getPhoneNumbers($row["publisher"],$conn);
        $row["phone_no"]=$links;
        $json=$json.json_encode($row).",";
    }
    return $json;
}
/**************THIS METHOD RETURNS A QUERY FOR FETCHING ALL THE YOUNGER CARDS WITH PREFERENCE********
*/
function generateQueryPreferredCardUp($id,$cardType,$limit,$preferences){
    $categories="";
    foreach($preferences as $element){
        $categories.=$element.",";
    }
    $categories=substr($categories,0,-1);
    if($cardType==ALL_CARDS)
        $query="select * from feed_view where card_id>$id and ( card_id in(select card_id from card_of_category where category_id in ($categories) ) or priority>=6 )order by card_id desc limit $limit;";
    else
        $query="select * from feed_view where card_id>$id and type=$cardType and ( card_id in(select card_id from card_of_category where category_id in ($categories) ) or priority>=6 )  order by card_id desc limit $limit;";
    return $query;
}

/**************THIS METHOD RETURNS A QUERY FOR FETCHING ALL THE YOUNGER CARDS WITH PREFERENCE********
*/
function generateQueryPreferredCardDown($id,$cardType,$limit,$preferences){
    $categories="";
    foreach($preferences as $element){
        $categories.=$element.",";
    }
    $categories=substr($categories,0,-1);
    if($cardType==ALL_CARDS)
        $query="select * from feed_view where card_id<=$id and ( card_id in(select card_id from card_of_category where category_id in ($categories) ) or priority>=6 ) order by card_id desc limit $limit;";
    else
        $query="select * from feed_view where card_id<=$id and type=$cardType and ( card_id in(select card_id from card_of_category where category_id in ($categories) ) or priority>=6 )  order by card_id desc limit $limit;";
    return $query;
}


/********************************QUERY PREFERRED CARD***********************************************
the function takes input as card id , connection object , card type , the no of rows to be fetched (limit) and the preference list (categories)
the function fetched the specified card(ALL_CARDS,EVENT_CARDS,NEWS_CARDS) type from table and returns json string containing $limit elements
*/
function queryPreferredCards($id,$conn,$cardType=ALL_CARDS,$limit=DEFAULT_NO_CARDS,$preferences){
    $json='{ "cards":[';
    $rowCount=0;
    $query=generateQueryPreferredCardUp($id,$cardType,$limit,$preferences);
    $result=mysqli_query($conn,$query);
    $rowCount+=mysqli_num_rows($result);
    $json=addJsonEntry($json,$result,$conn);
    if($rowCount<$limit){
        $query=generateQueryPreferredCardDown($id,$cardType,$limit-$rowCount,$preferences);
        $result=mysqli_query($conn,$query);
        $rowCount+=mysqli_num_rows($result);
        $json=addJsonEntry($json,$result,$conn);   
    }
    if($rowCount<=0){
        return EMPTY_LIST_CARDS;
    }
    $json=substr($json,0,-1);
    $json=$json."]}";
    return $json;
}
/***********THIS METHOD RETURNS ALL PREFERRED THE CARDS YOUNGER THAN $id************************************
*/
function queryYoungerPreferredCards($id,$conn,$cardType=ALL_CARDS,$limit=DEFAULT_NO_CARDS,$preferences){
    $json='{ "cards":[';
    $query=generateQueryPreferredCardUp($id,$cardType,$limit,$preferences);
    $result=mysqli_query($conn,$query);
    if(mysqli_num_rows($result)<=0){
        return EMPTY_LIST_CARDS;
    }
    $json=addJsonEntry($json,$result,$conn);
    $json=substr($json,0,-1);
    $json=$json."]}";
    return $json;
}
/***********THIS METHOD RETURNS ALL THE PREFERRED CARDS OLDER THAN OR EQUAL $id************************
*/
function queryOlderPreferredCards($id,$conn,$cardType=ALL_CARDS,$limit=DEFAULT_NO_CARDS,$preferences){
    $json='{ "cards":[';
    $query=generateQueryPreferredCardDown($id,$cardType,$limit,$preferences);
    $result=mysqli_query($conn,$query);
    if(mysqli_num_rows($result)<=0){
        return EMPTY_LIST_CARDS;
    }
    $json=addJsonEntry($json,$result,$conn);
    $json=substr($json,0,-1);
    $json=$json."]}";
    return $json;
}





/********************************QUERY CARD***********************************************
the function takes input as card id , connection object , card type and the no of rows to be fetched (limit)
the function fetched the specified card(ALL_CARDS,EVENT_CARDS,NEWS_CARDS) type from table and returns json string containing $limit elements
*/
function queryCards($id,$conn,$cardType=ALL_CARDS,$limit=DEFAULT_NO_CARDS){
    $json='{ "cards":[';
    $rowCount=0;
    $query=generateQueryUp($id,$cardType,$limit);
    $result=mysqli_query($conn,$query);
    $rowCount+=mysqli_num_rows($result);
    $json=addJsonEntry($json,$result,$conn);
    if($rowCount<$limit){
        $query=generateQueryDown($id,$cardType,$limit-$rowCount);
        $result=mysqli_query($conn,$query);
        $rowCount+=mysqli_num_rows($result);
        $json=addJsonEntry($json,$result,$conn);   
    }
    if($rowCount<=0){
        return EMPTY_LIST_CARDS;
    }
    $json=substr($json,0,-1);
    $json=$json."]}";
    return $json;
}
/*********************THIS METHOD RETURNS ALL THE CARDS YOUNGER THAN $id************************************
*/
function queryYoungerCards($id,$conn,$cardType=ALL_CARDS,$limit=DEFAULT_NO_CARDS){
    $json='{ "cards":[';
    $query=generateQueryUp($id,$cardType,$limit);
    $result=mysqli_query($conn,$query);
    if(mysqli_num_rows($result)<=0){
        return EMPTY_LIST_CARDS;
    }
    $json=addJsonEntry($json,$result,$conn);
    $json=substr($json,0,-1);
    $json=$json."]}";
    return $json;
}
/***********THIS METHOD RETURNS ALL THE CARDS OLDER THAN OR EQUAL $id************************
*/
function queryOlderCards($id,$conn,$cardType=ALL_CARDS,$limit=DEFAULT_NO_CARDS){
    $json='{ "cards":[';
    $query=generateQueryDown($id,$cardType,$limit);
    $result=mysqli_query($conn,$query);
    if(mysqli_num_rows($result)<=0){
        return EMPTY_LIST_CARDS;
    }
    $json=addJsonEntry($json,$result,$conn);
    $json=substr($json,0,-1);
    $json=$json."]}";
    return $json;
}

/*****************This method will return the URL for the given image id**********************************
*/
function getImageUrl($id="-1"){
    if($id==-1){
        return "";
    }
    $image = "images/";
    if(file_exists($image.$id.".jpg")){//check for jpg
        $image=$id.".jpg";
        return $_SERVER["DOCUMENT_ROOT"]."/images/".$image;
    }else if(file_exists($image.$id.".jpeg")){//check for jpeg
        $image=$id.".jpeg";
    }
    else if(file_exists($image.$id.".png")){//check for png
        $image=$id.".png";
    }
    else return "";
    return $_SERVER["DOCUMENT_ROOT"]."/images/".$image;
}





/********************************HAS NEW EVENT*****************************************
The function returns truw if the youngest card on the users app is older than the youngest card on
the database.
does thos by checking if $id is less than max(card_id) (if yes then true is returned)
*/
function hasNewEvent($id,$conn){
    $query="select max(card_id) from feed_view;";
    $result=mysqli_query($conn,$query);
    $row=mysqli_fetch_assoc($result);
    if($row["max(card_id)"]==$id)
        return 1;
    else
        return 0;
}

/****************getMaxCardId***********************
This function returns max of card_id
*/
function getMaxCardId($conn){
    $query="select max(card_id) from feed_view";
    $result=mysqli_query($conn,$query);
    $row=mysqli_fetch_assoc($result);
    return $row["max(card_id)"];
}

/****************CHECK IF THE COMMITTEE EXISTS*************************
This function returns 1 (true) if the passed commmittee exists
takes input as committee name
*/
function committeeExists($id,$conn){
    $query="select committee_id from committee where committee_name='$id';";
    $result=mysqli_query($conn,$query);
    return mysqli_num_rows($result);
}
/***************GET COMMITTEE LIST**************************
This function returns a list of all the committees in the database
*/
function getCommitteeList($conn){
    $query="select * from committee";
    $result=mysqli_query($conn,$query);
    if(mysqli_num_rows($result)==0)
        return EMPTY_LIST_COMMITTEE;
    $json='{ "committee":[';
    while($row=mysqli_fetch_assoc($result)){
        $json.=json_encode($row).',';
    }
    $json=substr($json,0,-1);
    $json.=']}';
}
/***********************INSERT PERSON********************************
this function takes input as email,person name,password and committee id and returns the person id
*/
function insertPerson($name,$email,$password,$committee_id,$conn){
    $query="insert into person (name,email,password,committee_id) values ('$name','$email','$password',$committee_id);";
    $result=mysqli_query($conn,$query);
    $query="select person_id from person where email='$email';";
    $result=mysqli_query($conn,$query);
    $row=mysqli_fetch_assoc($result);
    return $row["person_id"];
}
/*****************INSERT PHONE NUMBERS********************
This method returns phone number for every user passed as the argument
*/
function insertPhoneNumbers($id,$phone,$conn){
    $query="insert into person_phone (person_id,phone_no) values ($id,'$phone');";
    mysqli_query($conn);
}

/****************INSERT COMMITTEE *********************
This method takes input as commitete name and inserts the committee in it
*/
function insertCommittee($name,$conn){
    $query="insert into committee(committee_name) values('$name')";
    $result=mysqli_query($conn,$query);
    $query="select committee_id from committee where committee_name='$name';";
    $result=mysqli_query($conn,$query);
    $row=mysqli_fetch_assoc($result);
    return $row["committee_id"];
}

/****************INSERT CARD *********************
This method takes input as an array which contains all the fields in the card table 
and returns the card_id
*/
function insertCard($arr,$conn){
    if ($query = mysqli_prepare($conn, "insert into card (title,priority,content,card_date,venue,publisher,type,has_multiple_images) values(?,?,?,?,?,?,?,?)")) {
        mysqli_stmt_bind_param($query, "sisssdii", $arr["title"],$arr["priority"],$arr["content"],$arr["date"],$arr["venue"],$arr["publisher"],$arr["type"],$arr["has_multiple_images"]);
        mysqli_stmt_execute($query);
        $query="select max(card_id) from card;";
        $result=mysqli_query($conn,$query);
        $row=mysqli_fetch_assoc($result);
        return $row["max(card_id)"];
        
    }
}
/*****************INSERT CARD LINK******************
This method takes input as a card link , card id and inserts into card_link tables
*/
function insertCardLink($card_id,$link,$conn){
    $query ="insert into card_links (card_id,link) values ($card_id,'$link');";
    mysqli_query($conn,$query);
}
/*****************INSERT CARD CATEGORY******************
This method takes input as card id and category id and makes an entry in card_of_category 
Not tested yet
*/
function insertCardCategory($id,$preference,$conn){
    $query ="insert into card_of_category (category_id,card_id) values ($preference,$card_id);";
    mysqli_query($conn,$query);
}
?>



